// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Player struct {
	ID        string        `json:"id"`
	FirstName string        `json:"first_name"`
	LastName  string        `json:"last_name"`
	Team      *Team         `json:"team"`
	Games     []*PlayerGame `json:"games"`
}

type PlayerGame struct {
	Date                         string    `json:"date"`
	Opponent                     *Team     `json:"opponent"`
	Season                       string    `json:"season"`
	Minutes                      time.Time `json:"minutes"`
	Points                       int       `json:"points"`
	FieldGoalsMade               int       `json:"field_goals_made"`
	FieldGoalsAttempted          int       `json:"field_goals_attempted"`
	FieldGoalPercentage          float64   `json:"field_goal_percentage"`
	Assists                      int       `json:"assists"`
	AssistPercentage             float64   `json:"assist_percentage"`
	Turnovers                    int       `json:"turnovers"`
	DefensiveRebounds            int       `json:"defensive_rebounds"`
	DefensiveReboundPercentage   float64   `json:"defensive_rebound_percentage"`
	OffensiveRebounds            int       `json:"offensive_rebounds"`
	OffensiveReboundPercentage   float64   `json:"offensive_rebound_percentage"`
	TotalRebounds                int       `json:"total_rebounds"`
	FreeThrowsMade               int       `json:"free_throws_made"`
	FreeThrowsAttempted          int       `json:"free_throws_attempted"`
	PersonalFouls                int       `json:"personal_fouls"`
	PersonalFoulsDrawn           int       `json:"personal_fouls_drawn"`
	ThreePointersMade            int       `json:"three_pointers_made"`
	ThreePointersAttempted       int       `json:"three_pointers_attempted"`
	ThreePointPercentage         float64   `json:"three_point_percentage"`
	Usage                        float64   `json:"usage"`
	EffectiveFieldGoalPercentage float64   `json:"effective_field_goal_percentage"`
	TrueShootingPercentage       float64   `json:"true_shooting_percentage"`
}

type Team struct {
	ID           string      `json:"id"`
	Abbreviation string      `json:"abbreviation"`
	City         string      `json:"city"`
	Name         string      `json:"name"`
	Games        []*TeamGame `json:"games"`
}

type TeamGame struct {
	Date                                 string  `json:"date"`
	Opponent                             *Team   `json:"opponent"`
	Season                               string  `json:"season"`
	FieldGoalsAttempted                  int     `json:"field_goals_attempted"`
	FieldGoalPercentage                  float64 `json:"field_goal_percentage"`
	Pace                                 float64 `json:"pace"`
	DefensiveRating                      float64 `json:"defensive_rating"`
	DefensiveReboundPercentage           float64 `json:"defensive_rebound_percentage"`
	OffensiveReboundPercentage           float64 `json:"offensive_rebound_percentage"`
	PersonalFouls                        int     `json:"personal_fouls"`
	OpponentPoints                       int     `json:"opponent_points"`
	OpponentEffectiveFieldGoalPercentage float64 `json:"opponent_effective_field_goal_percentage"`
	OpponentAssists                      int     `json:"opponent_assists"`
	OpponentRebounds                     int     `json:"opponent_rebounds"`
	OpponentThreePointersMade            int     `json:"opponent_three_pointers_made"`
	OpponentThreePointersAttempted       int     `json:"opponent_three_pointers_attempted"`
	OpponentFieldGoalsAttempted          int     `json:"opponent_field_goals_attempted"`
	OpponentThreePointFrequency          float64 `json:"opponent_three_point_frequency"`
	OpponentFreeThrowsAttempted          int     `json:"opponent_free_throws_attempted"`
}
